chapter_title: Residential Energy Consumption Survey

needs_actions_build_status_line: yes

~~~{dataset_introduction}
dataset introduction
~~~

table_structure: * table structure

generalizable_population: * generalizable population

publication_period: * publication period

administrative_organization: * administrative organization





~~~{reading_block}
Please skim before you begin:

1. 

2. [2020 Residential Energy Consumption Survey: Household Characteristics Technical Documentation Summary](https://www.eia.gov/consumption/residential/data/2020/pdf/2020%20RECS_Methodology%20Report.pdf)

3. This human-composed haiku or a bouquet of [artificial intelligence-generated limericks](https://www.gnod.com/search/ai#q=write%20a%20limerick-style%20poem%20about%20the%20chapter_title)

```{r}
# 
# 
# 
```
~~~


~~~{download_and_import_block}

Download the sas file:
```{r eval = FALSE , results = "hide" }
sas_tf <- tempfile()

sas_url <- "https://www.eia.gov/consumption/residential/data/2020/sas/recs2020_public_v2.zip"

download.file( sas_url , sas_tf , mode = 'wb' )
```

Edit then execute the import script provided by the CDC:
```{r eval = FALSE , results = "hide" }
library(haven)

chapter_tag_tbl <- read_sas( sas_tf )

chapter_tag_df <- data.frame( chapter_tag_tbl )

names( chapter_tag_df ) <- tolower( names( chapter_tag_df ) )

chapter_tag_df[ , 'one' ] <- 1
```
~~~





~~~{analysis_examples_survey_design}
```{r messages = FALSE , eval = FALSE }
library(survey)

chapter_tag_design <-
	svrepdesign(
		data = chapter_tag_df ,
		weight = ~ nweight ,
		repweights = 'nweight[1-9]+' ,
		type = 'JK1' ,
		combined.weights = TRUE ,
		scale = 59 / 60 ,
		mse = TRUE
	)
```
~~~

~~~{variable_recoding_block}
chapter_tag_design <- 
	
	update( 
		
		chapter_tag_design , 
		
		main_heating_fuel = 
			factor(
				fuelheat ,
				levels = c( -2 , 5 , 1 , 2 , 3 , 7 , 99 ) ,
				labels = 
					c(
						'Not applicable' , 
						'Electricity' , 
						'Natural gas from underground pipes' , 
						'Propane (bottled gas)' , 
						'Fuel oil' , 
						'Wood or pellets' , 
						'Other' 
					)
			) ,
			
		swimpool_binary =
			ifelse( swimpool %in% 0:1 , swimpool , NA )
			
	)
~~~

group_by_variable: main_heating_fuel

categorical_variable: state_name

linear_variable: totsqft_en
linear_variable_description: total energy-consuming area (square footage) of the housing unit

ratio_estimation_numerator: totcsqft
ratio_estimation_denominator: totsqft_en

subset_definition: nummeal == 1
subset_definition_description: households that cook three or more hot meals per day

binary_variable: swimpool_binary
binary_variable_description: has swimming pool
binary_narm: , na.rm = TRUE

~~~{intermission_block}
<center>https://en.wikipedia.org/wiki/Lorem_ipsum</center>
~~~

needs_srvyr_block: yes

~~~{replication_example_block}
## Replication Example {-}

This example matches the statistic, standard error, and relative standard error on PDF page 8 of [2020 Residential Energy Consumption Survey: Using the microdata file to compute estimates and relative standard errors (RSEs)](https://www.eia.gov/consumption/residential/data/2020/pdf/microdata-guide.pdf)




```{r eval = FALSE , results = "hide" }
sas_v1_tf <- tempfile()

sas_v1_url <- "https://www.eia.gov/consumption/residential/data/2020/sas/recs2020_public_v1.zip"

download.file( sas_v1_url , sas_v1_tf , mode = 'wb' )

chapter_tag_v1_tbl <- read_sas( sas_v1_tf )

chapter_tag_v1_df <- data.frame( chapter_tag_v1_tbl )

names( chapter_tag_v1_df ) <- tolower( names( chapter_tag_v1_df ) )

chapter_tag_v1_design <-
    svrepdesign(
        data = chapter_tag_v1_df ,
        weight = ~ nweight ,
        repweights = 'nweight[1-9]+' ,
        type = 'JK1' ,
        combined.weights = TRUE ,
        scale = 59 / 60 ,
        mse = TRUE
    )
	
chapter_tag_v1_design <- 
	
	update( 
		
		chapter_tag_v1_design , 
		
		natural_gas_mainspace_heat = as.numeric( fuelheat == 1 )
			
	)
	
result <-
	svytotal( 
		~ natural_gas_mainspace_heat , 
		chapter_tag_v1_design 
	)

stopifnot( round( coef( result ) , 0 ) == 56245389 )
stopifnot( round( SE( result ) , 0 ) == 545591 )
stopifnot( round( 100 * SE( result ) / coef( result ) , 2 ) == 0.97 )
```

~~~





