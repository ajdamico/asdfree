chapter_title: American Time Use Survey

needs_actions_build_status_line: yes

~~~{dataset_introduction}
Sampled individuals write down everything they do for a single twenty-four hour period, in ten minute intervals.  Time use data allows for the study of uncompensated work like cooking, chores, childcare.
~~~

table_structure: * Many tables with structures [described in the user guide](https://www.bls.gov/tus/atususersguide.pdf#page=34), linkable to the Current Population Survey.

generalizable_population: * A complex survey generalizing to person-hours among civilian non-institutional americans aged 15+.

publication_period: * Released annually since 2003.

administrative_organization: * Administered by the [Bureau of Labor Statistics](https://www.bls.gov/).




~~~{reading_block}
## Recommended Reading {-}

Four Strengths & Weaknesses:

✔️ [Detailed respondent activity information](https://www.bls.gov/tus/lexicons.htm)

✔️ [Network of international time use researchers](https://www.mtusdata.org/mtus/about.shtml)

❌ [Each individual respondent contributes only 24 hours of activity on "diary day"](https://www.bls.gov/news.release/atus.tn.htm)

❌ [Limited sample sizes do not represent smaller geographic areas](https://www.bls.gov/opub/hom/atus/design.htm)

<br>

Three Example Findings:

1. [On average during 2021 and 2022, 37.1 million people in the US provided unpaid eldercare](https://www.bls.gov/news.release/elcare.nr0.htm).

2. [Approximately 15% of working hours were performed at home in the US from 2011 to 2018](https://dx.doi.org/10.2139/ssrn.3579230).

3. [Lack of free time is not responsible for low physical activity at the population level during 2014-2016](http://dx.doi.org/10.5888/pcd16.190017).

<br>

Two Methodology Documents:

> [American Time Use Survey User's Guide](https://www.bls.gov/tus/atususersguide.pdf)

> [Wikipedia Entry](https://en.wikipedia.org/wiki/American_Time_Use_Survey)

<br>

One Haiku:

```{r}
# don't judge me bruno
# eat one hour, sleep the rest
# it's my lazy day
```

~~~



~~~{definitions_block}
## Function Definitions {-}


Define a function to download, unzip, and import each comma-separated value dat file:

```{r eval = FALSE , results = "hide" }
library(httr)

chapter_tag_csv_import <-
	function( this_url ){
		
		this_tf <- tempfile()
		
		this_dl <- GET( this_url , user_agent( "email@address.com") )
		
		writeBin( content( this_dl ) , this_tf )

		unzipped_files <- unzip( this_tf , exdir = tempdir() )
		
		this_dat <- grep( '\\\\.dat$' , unzipped_files , value = TRUE )
		
		this_df <- read.csv( this_dat )
		
		file.remove( c( this_tf , unzipped_files ) )
		
		names( this_df ) <- tolower( names( this_df ) )
		
		this_df
	}

```	

---
~~~


~~~{download_and_import_block}


Download and import the activity, respondent, roster, and weights tables:

```{r eval = FALSE , results = "hide" }
act_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atusact-2023.zip" )

resp_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atusresp-2023.zip" )

rost_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atusrost-2023.zip" )

wgts_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atuswgts-2023.zip" )
```


Specify which variables to keep in each of the `data.frame` objects:
```{r eval = FALSE , results = "hide" }
act_df <- act_df[ c( 'tucaseid' , 'tutier1code' , 'tutier2code' , 'tuactdur24' ) ]

resp_df <- resp_df[ c( 'tucaseid' , 'tufinlwgt' , 'tulineno' ) ]

rost_df <- rost_df[ , c( 'tucaseid' , 'tulineno' , 'teage' , 'tesex' ) ]
```



Distribute travel-related activities (`tutier1code == 18` from the [lexicon](https://www.bls.gov/tus/lexicons/lexiconwex2023.pdf)) based on their second tier code:

```{r eval = FALSE , results = "hide" }
act_df[ act_df[ , 'tutier1code' ] == 18 & act_df[ , 'tutier2code' ] == 99 , 'tutier1code' ] <- 50

act_df[ act_df[ , 'tutier1code' ] == 18 , 'tutier1code' ] <-
	act_df[ act_df[ , 'tutier1code' ] == 18 , 'tutier2code' ]
```


Sum up all durations at the (respondent x major activity category)-level:

```{r eval = FALSE , results = "hide" }
act_long_df <- aggregate( tuactdur24 ~ tucaseid + tutier1code , data = act_df , sum )

act_wide_df <-
	reshape( act_long_df , idvar = 'tucaseid' , timevar = 'tutier1code' , direction = 'wide' )

# for individuals not engaging in an activity category, replace missings with zero minutes
act_wide_df[ is.na( act_wide_df ) ] <- 0

# for all columns except the respondent identifier, convert minutes to hours
act_wide_df[ , -1 ] <- act_wide_df[ , -1 ] / 60
```


Merge the respondent and summed activity tables, then the roster table, and finally the replicate weights:

```{r eval = FALSE , results = "hide" }
resp_act_df <- merge( resp_df , act_wide_df )

stopifnot( nrow( resp_act_df ) == nrow( resp_df ) )

resp_act_rost_df <- merge( resp_act_df , rost_df )

stopifnot( nrow( resp_act_rost_df ) == nrow( resp_df ) )

chapter_tag_df <- merge( resp_act_rost_df , wgts_df )

stopifnot( nrow( chapter_tag_df ) == nrow( resp_df ) )

# remove dots from column names
names( chapter_tag_df ) <- gsub( "\\\\." , "_" , names( chapter_tag_df ) )

chapter_tag_df[ , 'one' ] <- 1
```

~~~




~~~{analysis_examples_survey_design}

```{r eval = FALSE , results = "hide" }
library(survey)

chapter_tag_design <- 
	svrepdesign(
		weights = ~ tufinlwgt ,
		repweights = "finlwgt[0-9]" , 
		type = "Fay" , 
		rho = ( 1 - 1 / sqrt( 4 ) ) ,
		mse = TRUE ,
		data = chapter_tag_df
	)
```
~~~

~~~{variable_recoding_block}

# caring for and helping household members is top level 03 from the lexicon
# https://www.bls.gov/tus/lexicons/lexiconwex2023.pdf

chapter_tag_design <-
	update(
		chapter_tag_design ,
		
		any_care = as.numeric( tuactdur24_3 > 0 ) ,
		
		tesex = factor( tesex , levels = 1:2 , labels = c( 'male' , 'female' ) ) ,
		
		age_category = 
			factor( 
				1 + findInterval( teage , c( 18 , 35 , 65 ) ) , 
				labels = c( "under 18" , "18 - 34" , "35 - 64" , "65 or older" ) 
			)
	)

~~~

group_by_variable: age_category
group_by_variable_description: age categories

categorical_variable: tesex
categorical_variable_description: sex

linear_variable: tuactdur24_1
linear_variable_description: average hours per day spent in personal care activities

ratio_estimation_numerator: tuactdur24_5
ratio_estimation_denominator: tuactdur24_12

subset_definition: tuactdur24_15 > 0
subset_definition_description: any time volunteering

binary_variable: any_care
binary_variable_description: percent performing any care of household members during the day


needs_srvyr_block: yes


~~~{replication_example_block}
## Replication Example {-}

This example matches the "Caring for and helping household members" row of [Table A-1](https://www.bls.gov/tus/tables/a1-2023.pdf):

```{r eval = FALSE , results = "hide" }
hours_per_day_civilian_population <- svymean( ~ tuactdur24_3 , chapter_tag_design )

stopifnot( round( coef( hours_per_day_civilian_population ) , 2 ) == 0.5 )

percent_engaged_per_day <- svymean( ~ any_care , chapter_tag_design )

stopifnot( round( coef( percent_engaged_per_day ) , 3 ) == 0.22 )

hours_per_day_among_engaged <- svymean( ~ tuactdur24_3 , subset( chapter_tag_design , any_care ) )

stopifnot( round( coef( hours_per_day_among_engaged ) , 2 ) == 2.29 )
```

This example matches the average hours and SE from Section 7.5 of the [User's Guide](https://www.bls.gov/tus/atususersguide.pdf#page=43):

Download and import the activity, activity summary, respondent, and weights tables:

```{r eval = FALSE , results = "hide" }
actsum07_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atussum_2007.zip" )
resp07_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atusresp_2007.zip" )
act07_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atusact_2007.zip" )
wgts07_df <- chapter_tag_csv_import( "https://www.bls.gov/tus/datafiles/atuswgts_2007.zip" )
```




Option 1. Sum the two television fields from the activity summary file, removing zeroes:

```{r eval = FALSE , results = "hide" }
television_per_person <-
	data.frame(
		tucaseid = actsum07_df[ , 'tucaseid' ] ,

		tuactdur24 = rowSums( actsum07_df[ , c( 't120303' , 't120304' ) ] )
	)

television_per_person <- 
	television_per_person[ television_per_person[ , 'tuactdur24' ] > 0 , ]
```


Option 2. Limit the activity file to television watching records according to the [2007 Lexicon](https://www.bls.gov/tus/lexicons/lexiconwex2007.pdf):

```{r eval = FALSE , results = "hide" }
television_activity <- 
	subset( 
		act07_df , 
		tutier1code == 12 &
		tutier2code == 3 &
		tutier3code %in% 3:4
	)

television_activity_summed <-
		aggregate(
			tuactdur24 ~ tucaseid ,
			data = television_activity ,
			sum
		)
```

Confirm both aggregation options yield the same results:

```{r eval = FALSE , results = "hide" }
stopifnot(
	all( television_per_person[ , 'tucaseid' ] == television_activity_summed[ , 'tucaseid' ] )
)

stopifnot(
	all( television_per_person[ , 'tuactdur24' ] == television_activity_summed[ , 'tuactdur24' ] )
)
```

Merge the respondent and summed activity tables, then the replicate weights:

```{r eval = FALSE , results = "hide" }
resp07_tpp_df <- 
	merge( 
		resp07_df[ , c( 'tucaseid' , 'tufinlwgt' ) ] , 
		television_per_person , 
		all.x = TRUE
	)

stopifnot( nrow( resp07_tpp_df ) == nrow( resp07_df ) )

# for individuals without television time, replace missings with zero minutes
resp07_tpp_df[ is.na( resp07_tpp_df[ , 'tuactdur24' ] ) , 'tuactdur24' ] <- 0

# convert minutes to hours
resp07_tpp_df[ , 'tuactdur24_hour' ] <- resp07_tpp_df[ , 'tuactdur24' ] / 60

chapter_tag07_df <- merge( resp07_tpp_df , wgts07_df )

stopifnot( nrow( chapter_tag07_df ) == nrow( resp07_df ) )
```

Construct a complex sample survey design:

```{r eval = FALSE , results = "hide" }
chapter_tag07_design <- 
	svrepdesign(
		weights = ~ tufinlwgt ,
		repweights = "finlwgt[0-9]" ,
		type = "Fay" ,
		rho = ( 1 - 1 / sqrt( 4 ) ) ,
		data = chapter_tag07_df
	)
```

Match the statistic and SE of the number of hours daily that americans older than 14 watch tv:

```{r eval = FALSE , results = "hide" }
result <- svymean( ~ tuactdur24_hour , chapter_tag07_design )

stopifnot( round( coef( result ) , 2 ) == 2.62 )
stopifnot( round( SE( result ) , 4 ) == 0.0293 )
```

~~~
