chapter_title: Exame Nacional de Desempenho de Estudantes

needs_actions_build_status_line: yes -windows -linux

~~~{dataset_introduction}
An evaluation of the performance of undergraduate students in relation to the program content, skills and competences acquired in their training. The exam is mandatory and the student's regularity in the exam must be included in his or her school record.
~~~

table_structure: * One table with one row per individual undergraduate student in Brazil.

publication_period: * Released annually since 2004.

generalizable_population: * An enumeration of undergraduate students in Brazil.

administrative_organization: * Compiled by the [Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira (INEP)](http://www.inep.gov.br/).

~~~{reading_block}
Please skim before you begin:

1.

2.

3. This poem

```{r}
#
#
#
```
~~~



~~~{download_and_import_block}

Download and import the 1999 medical claims file:

```{r eval = FALSE }
library(httr)
library(archive)

tf <- tempfile()

this_url <-	"https://download.inep.gov.br/microdados/microdados_enade_2021.zip"

GET( this_url , write_disk( tf ) )

archive_extract( tf , dir = tempdir() )
```
~~~


~~~{analysis_examples_loading_block}
```{r messages = FALSE , eval = FALSE }

read_enade_archive <-
	function( this_regular_expression , this_directory ){
		this_filename <- 
			grep( 
				this_regular_expression , 
				list.files( 
					this_directory ,
					recursive = TRUE ,
					full.names = TRUE 
				) , 
				value = TRUE 
			)

		this_df <-
			read.table(
				this_filename ,
				header = TRUE ,
				sep = ";" ,
				na.strings = ""
			)
			
		names( this_df ) <- tolower( names( this_df ) )
		
		this_df
	}

arq1_df <- read_enade_archive( 'arq1\\\\.txt$' , tempdir() )

arq1_df <- unique( arq1_df[ c( 'co_curso' , 'co_uf_curso' , 'co_categad' , 'co_grupo' ) ] )

arq3_df <- read_enade_archive( 'arq3\\\\.txt$' , tempdir() )

chapter_tag_df <- merge( arq3_df , arq1_df )

stopifnot( nrow( chapter_tag_df ) == nrow( arq3_df ) )

```
~~~


~~~{variable_recoding_block}
chapter_tag_df <- 
	transform( 
		chapter_tag_df , 
		
		# qual foi o tempo gasto por voce para concluir a prova?
		less_than_two_hours = as.numeric( co_rs_i9 %in% c( 'A' , 'B' ) ) ,
		
		administrative_category =
			factor(
				co_categad ,
				levels = c( 1:5 , 7 ) ,
				labels = c( '1. Pública Federal' , '2. Pública Estadual' , 
				'3. Pública Municipal' , '4. Privada com fins lucrativos' , 
				'5. Privada sem fins lucrativos' , '7. Especial' )
			) ,

		state_name = 
			factor( 
				co_uf_curso , 
				levels = c( 11:17 , 21:29 , 31:33 , 35 , 41:43 , 50:53 ) ,
				labels = c( "Rondonia" , "Acre" , "Amazonas" , 
				"Roraima" , "Para" , "Amapa" , "Tocantins" , 
				"Maranhao" , "Piaui" , "Ceara" , "Rio Grande do Norte" , 
				"Paraiba" , "Pernambuco" , "Alagoas" , "Sergipe" , 
				"Bahia" , "Minas Gerais" , "Espirito Santo" , 
				"Rio de Janeiro" , "Sao Paulo" , "Parana" , 
				"Santa Catarina" , "Rio Grande do Sul" , 
				"Mato Grosso do Sul" , "Mato Grosso" , "Goias" , 
				"Distrito Federal" )
			)

	)
	
~~~

group_by_variable: administrative_category
linear_variable: nt_obj_fg
linear_narm: , na.rm = TRUE
categorical_variable: state_name
subset_definition: co_rs_i1 %in% c( "A" , "B" )
subset_definition_description: students reporting that the general training section was easy or very easy
binary_variable: less_than_two_hours



~~~{intermission_block}
<center>https://en.wikipedia.org/wiki/Lorem_ipsum</center>
~~~

needs_dplyr_block: yes


~~~{replication_example_block}
## Replication Example {-}

The example below matches the tecnologia em gestão da tecnologia da informação test scores on PDF page 48 of [the 2021 final results document](https://download.inep.gov.br/enade/resultados/2021/apresentacao_resultados_finais.pdf#page=48)

```{r eval = FALSE , results = "hide" }

it_students <- subset( chapter_tag_df , co_grupo %in% 6409 )

results <- sapply( it_students[ c( 'nt_fg' , 'nt_ce' , 'nt_ger' ) ] , mean , na.rm = TRUE )

stopifnot( round( results[ 'nt_fg' ] , 1 ) == 30.4 )
stopifnot( round( results[ 'nt_ce' ] , 1 ) == 38.2 )
stopifnot( round( results[ 'nt_ger' ] , 1 ) == 36.3 )

```
~~~






