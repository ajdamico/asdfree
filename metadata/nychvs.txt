chapter_title: New York City Housing and Vacancy Survey

needs_actions_build_status_line: yes

~~~{dataset_introduction}
A city-wide assessment of the rental vacancy rate and other characteristics related to housing stock.
~~~

table_structure: * One table with one record per occupied housing unit, a second table with one record per person inside each occupied housing unit, and a third table with one record per unoccupied housing unit.

generalizable_population: * A complex sample designed to generalize to occupied & unoccupied housing in the five boroughs.

publication_period: * Released more or less triennially since 1991.

administrative_organization: * Funded by the [NYC Dept. of Housing Preservation & Development](www.nyc.gov/hpd), run by the [Census Bureau](http://www.census.gov/).

~~~{reading_block}
Please skim before you begin:

1. [Public Use File User Guide and Codebook](https://www2.census.gov/programs-surveys/nychvs/technical-documentation/record-layouts/2021/2021_NYCHVS_PUF_User_Guide_and_Codebook.pdf)

2. [Sample Design, Weighting, and Error Estimation](https://www2.census.gov/programs-surveys/nychvs/technical-documentation/source-and-accuracy/2021_NYCHVS_Sample_Design_Weighting_and_Error_Estimation.pdf)

3. This human-composed haiku or a bouquet of [artificial intelligence-generated limericks](https://www.gnod.com/search/ai#q=write%20a%20limerick-style%20poem%20about%20the%20chapter_title)

```{r}
# all i want is a
# room somewhere / with clawfoot tub
# and a frigidaire
```
~~~

~~~{download_and_import_block}

Define a function to download and import each comma-separated value file:
```{r eval = FALSE , results = "hide" }
nychvs_csv_import <-
	function( this_url ){
		
		tf <- tempfile()
		
		download.file( this_url , tf , mode = 'wb' )
		
		this_df <- read.csv( tf )
		
		names( this_df ) <- tolower( names( this_df ) )
		
		this_df
	}
```
	

Download and import the all units, occupied units, person, and vacant units tables:

```{r eval = FALSE , results = "hide" }
datasets_url <- "https://www2.census.gov/programs-surveys/nychvs/datasets/2021/microdata/"

all_units_df <-
	nychvs_csv_import( paste0( datasets_url , "allunits_puf_21.csv" ) )

occupied_units_df <-
	nychvs_csv_import( paste0( datasets_url , "occupied_puf_21.csv" ) )

person_df <-
	nychvs_csv_import( paste0( datasets_url , "person_puf_21.csv" ) )

vacant_units_df <-
	nychvs_csv_import( paste0( datasets_url , "vacant_puf_21.csv" ) )

stopifnot( nrow( all_units_df ) == nrow( occupied_units_df ) + nrow( vacant_units_df ) )
```

Merge the information stored in the all units table onto both the occupied and vacant unit tables, then merge the information (not related to weighting) from the occupied unit table onto the person table:

```{r eval = FALSE , results = "hide" }
before_nrow <- nrow( occupied_units_df )

occupied_units_df <- merge( all_units_df , occupied_units_df )

stopifnot( nrow( occupied_units_df ) == before_nrow )

before_nrow <- nrow( vacant_units_df )

vacant_units_df <- merge( all_units_df , vacant_units_df )

stopifnot( nrow( vacant_units_df ) == before_nrow )

before_nrow <- nrow( person_df )

weighting_variables <- grep( "^fw([0-9]+)?$" , names( occupied_units_df ) , value = TRUE )

person_df <-
	merge(
		occupied_units_df[ setdiff( names( occupied_units_df ) , weighting_variables ) ] ,
		person_df
	)

stopifnot( nrow( person_df ) == before_nrow )

all_units_df[ , 'one' ] <- occupied_units_df[ , 'one' ] <-
	vacant_units_df[ , 'one' ] <- person_df[ , 'one' ] <- 1
```
~~~



~~~{analysis_examples_survey_design}
```{r message = FALSE , eval = FALSE }
library(survey)

all_units_design <-
	svrepdesign(
		weight = ~fw ,
		repweights = 'fw[0-9]+' ,
		scale = 4 / 80 ,
		rscales = rep( 1 , 80 ) ,
		mse = TRUE ,
		type = 'JK1' ,
		data = all_units_df
	)
	
occupied_units_design <-
	svrepdesign(
		weight = ~fw ,
		repweights = 'fw[0-9]+' ,
		scale = 4 / 80 ,
		rscales = rep( 1 , 80 ) ,
		mse = TRUE ,
		type = 'JK1' ,
		data = occupied_units_df
	)
	
vacant_units_design <-
	svrepdesign(
		weight = ~fw ,
		repweights = 'fw[0-9]+' ,
		scale = 4 / 80 ,
		rscales = rep( 1 , 80 ) ,
		mse = TRUE ,
		type = 'JK1' ,
		data = vacant_units_df
	)
	
person_design <-
	svrepdesign(
		weight = ~pw ,
		repweights = 'pw[0-9]+' ,
		scale = 4 / 80 ,
		rscales = rep( 1 , 80 ) ,
		mse = TRUE ,
		type = 'JK1' ,
		data = person_df
	)


chapter_tag_design <-
	occupied_units_design
```
~~~





~~~{variable_recoding_block}
chapter_tag_design <- 
	update( 
		chapter_tag_design , 
		
		one = 1 ,
		
		home_owners = as.numeric( tenure == 2 ) ,

		yearly_household_income = hhinc_rec1 ,
		
		rent_amount = ifelse( rent_amount == -2 , NA , rent_amount ) ,
		
		borough =
			factor( boro , levels = 1:5 , labels =
				c( 'Bronx' , 'Brooklyn' , 'Manhattan' , 
				'Queens' , 'Staten Island' )
			) ,
			
		food_insecurity = 
			factor( 
				foodinsecure , 
				levels = 1:3 , 
				labels = 
					c( 'not insecure' , 'insecure' , 'very insecure' )
			)
			
	)
~~~

group_by_variable: borough

categorical_variable: food_insecurity
categorical_narm: , na.rm = TRUE

linear_variable: hhinc_rec1
linear_variable_description: household income
linear_narm: , na.rm = TRUE

ratio_estimation_numerator: rent_amount
ratio_estimation_denominator: hhinc_rec1
ratio_narm: , na.rm = TRUE

subset_definition: rentburden_cat %in% 1:2
subset_definition_description: rent burdened units (more than 30% of income paid toward rent alone)

binary_variable: home_owners

~~~{intermission_block}
<center>
<img src="https://4.bp.blogspot.com/-4_Hiz8r577M/W8yh4TlMuxI/AAAAAAABa_g/W0NCYviOy-Muz7pEYr9VStnlrF5BDyY5ACLcBGAs/s1600/20181020_213520.jpg">
<p>
<i><b>the author as budget daft punk</b></i>
</center>
~~~


needs_srvyr_block: yes


~~~{replication_example_block}
## Replication Example {-}

This example matches the estimate and standard error of the number of occupied housing units across the five boroughs [shown at minute 6:05](https://www.nyc.gov/assets/hpd/downloads/misc/gettingstartedwithnychvs_r_video.mp4):

```{r eval = FALSE , results = "hide" }
result <- svytotal( ~ one , nychvs_design )
stopifnot( round( coef( result ) , 0 ) == 3157105 )
stopifnot( round( SE( result ) , 0 ) == 13439 )
```
~~~



