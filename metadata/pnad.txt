chapter_title: Pesquisa Nacional por Amostra de Domicilios

needs_actions_build_status_line: yes -windows -linux

~~~{dataset_introduction}
Brazil's principal labor force survey, measuring education, employment, income, housing characteristics.
~~~

table_structure: * One consolidated table with one row per individual within each sampled household.

generalizable_population: * A complex sample survey designed to generalize to the civilian non-institutional population of Brazil.

publication_period: * Released quarterly since 2012, with microdata available both quarterly and annually.

administrative_organization: * Administered by the [Instituto Brasileiro de Geografia e Estatistica](http://www.ibge.gov.br/).


~~~{reading_block}
Please skim before you begin:

1. [Conceitos e métodos](https://www.ibge.gov.br/estatisticas/sociais/trabalho/17270-pnad-continua.html?=&t=conceitos-e-metodos)

2. [Wikipedia Entry](https://pt.wikipedia.org/wiki/Pesquisa_Nacional_por_Amostra_de_Domic%C3%ADlios)

3. This human-composed haiku or a bouquet of [artificial intelligence-generated limericks](https://www.gnod.com/search/ai#q=write%20a%20limerick-style%20poem%20about%20the%20chapter_title)

```{r}
# mineiro data
# love verdade gave to me
# twelve karaoke..
```
~~~




~~~{download_and_import_block}

Download and import the dictionary file:

```{r eval = FALSE , results = "hide" }
dictionary_tf <- tempfile()

dictionary_url <-
	paste0(
		"https://ftp.ibge.gov.br/Trabalho_e_Rendimento/" ,
		"Pesquisa_Nacional_por_Amostra_de_Domicilios_continua/" ,
		"Trimestral/Microdados/Documentacao/Dicionario_e_input_20221031.zip"
	)

download.file( dictionary_url , dictionary_tf , mode = 'wb' )

dictionary_files <- unzip( dictionary_tf , exdir = tempdir() )

sas_fn <- grep( '\\\\.sas$' , dictionary_files , value = TRUE )

sas_lines <- readLines( sas_fn , encoding = 'latin1' )
```

Determine fixed-width file positions from the SAS import script:

```{r eval = FALSE , results = "hide" }
sas_start <- grep( '@0001' , sas_lines )

sas_end <- grep( ';' , sas_lines )

sas_end <- sas_end[ sas_end > sas_start ][ 1 ]

sas_lines <- sas_lines[ seq( sas_start , sas_end - 1 ) ]

# remove SAS comments
sas_lines <- gsub( "\\\\/\\\\*(.*)" , "" , sas_lines )

# remove multiple spaces and spaces at the end of each string
sas_lines <- gsub( "( +)" , " " , sas_lines )
sas_lines <- gsub( " $" , "" , sas_lines )

sas_df <- 
	read.table( 
		textConnection( sas_lines ) , 
		sep = ' ' , 
		col.names = c( 'position' , 'column_name' , 'length' ) ,
		header = FALSE 
	)

sas_df[ , 'character' ] <- grepl( '\\\\$' , sas_df[ , 'length' ] )

sas_df[ , 'position' ] <- as.integer( gsub( "\\\\@" , "" , sas_df[ , 'position' ] ) )

sas_df[ , 'length' ] <- as.integer( gsub( "\\\\$" , "" , sas_df[ , 'length' ] ) )

stopifnot( 
	sum( sas_df[ , 'length' ] ) == 
	( sas_df[ nrow( sas_df ) , 'position' ] + sas_df[ nrow( sas_df ) , 'length' ] - 1 ) 
)

```

Download the latest quarterly file:

```{r eval = FALSE , results = "hide" }
this_tf <- tempfile()

this_url <-
	paste0(
		"https://ftp.ibge.gov.br/Trabalho_e_Rendimento/" ,
		"Pesquisa_Nacional_por_Amostra_de_Domicilios_continua/" ,
		"Trimestral/Microdados/2023/PNADC_012023.zip"
	)

download.file( this_url , this_tf , mode = 'wb' )
```

Import the latest quarterly file:

```{r eval = FALSE , results = "hide" }
library(readr)

chapter_tag_tbl <-
	read_fwf(
		this_tf ,
		fwf_widths( 
			widths = sas_df[ , 'length' ] , 
			col_names = sas_df[ , 'column_name' ] 
		) ,
		col_types = 
			paste0( ifelse( sas_df[ , 'character' ] , "c" , "d" ) , collapse = '' )
	)

chapter_tag_df <- data.frame( chapter_tag_tbl )

names( chapter_tag_df ) <- tolower( names( chapter_tag_df ) )

chapter_tag_df[ , 'one' ] <- 1
```



~~~






~~~{analysis_examples_survey_design}
```{r eval = FALSE , results = "hide" }
library(survey)


chapter_tag_design <-
	svrepdesign(
		data = chapter_tag_df ,
		weight = ~ v1028 ,
		type = 'bootstrap' ,
		repweights = 'v1028[0-9]+' ,
		mse = TRUE ,
	)

```
~~~


~~~{variable_recoding_block}
chapter_tag_design <-
	update(
	
		chapter_tag_design ,
		
		pia = as.numeric( v2009 >= 14 )
	
	)

chapter_tag_design <-
	update(
	
		chapter_tag_design ,
		
		ocup_c = ifelse( pia == 1 , as.numeric( vd4002 %in% 1 ) , NA ) ,

		desocup30 = ifelse( pia == 1 , as.numeric( vd4002 %in% 2 ) , NA )
	)

chapter_tag_design <- 

	update( 

		chapter_tag_design , 

		uf_name =
		
			factor(
			
				as.numeric( uf ) ,
				
				levels = 
					c(11L, 12L, 13L, 14L, 15L, 16L, 17L, 21L, 22L, 23L, 24L, 25L, 
					26L, 27L, 28L, 29L, 31L, 32L, 33L, 35L, 41L, 42L, 43L, 50L, 51L, 
					52L, 53L) ,
					
				labels =
					c("Rondonia", "Acre", "Amazonas", "Roraima", "Para", "Amapa", 
					"Tocantins", "Maranhao", "Piaui", "Ceara", "Rio Grande do Norte", 
					"Paraiba", "Pernambuco", "Alagoas", "Sergipe", "Bahia", "Minas Gerais", 
					"Espirito Santo", "Rio de Janeiro", "Sao Paulo", "Parana", "Santa Catarina", 
					"Rio Grande do Sul", "Mato Grosso do Sul", "Mato Grosso", "Goias", 
					"Distrito Federal")
					
			) ,

		age_categories = factor( 1 + findInterval( v2009 , seq( 5 , 60 , 5 ) ) ) ,

		male = as.numeric( v2007 == 1 ) ,

		region = substr( uf , 1 , 1 ) ,

		# calculate usual income from main job
		# (rendimento habitual do trabalho principal)
		vd4016n = ifelse( pia %in% 1 & vd4015 %in% 1 , vd4016 , NA ) ,

		# calculate effective income from main job
		# (rendimento efetivo do trabalho principal) 
		vd4017n = ifelse( pia %in% 1 & vd4015 %in% 1 , vd4017 , NA ) ,

		# calculate usual income from all jobs
		# (variavel rendimento habitual de todos os trabalhos)
		vd4019n = ifelse( pia %in% 1 & vd4015 %in% 1 , vd4019 , NA ) ,

		# calculate effective income from all jobs
		# (rendimento efetivo do todos os trabalhos) 
		vd4020n = ifelse( pia %in% 1 & vd4015 %in% 1 , vd4020 , NA ) ,

		# determine the potential labor force
		pea_c = as.numeric( ocup_c == 1 | desocup30 == 1 )
		
	)
~~~


group_by_variable: uf_name
linear_variable: vd4020n
linear_narm: , na.rm = TRUE
categorical_variable: age_categories
ratio_estimation_numerator: ocup_c
ratio_estimation_denominator: pea_c
ratio_narm: , na.rm = TRUE
subset_definition: ocup_c == 1
subset_definition_description: employed persons
binary_variable: male



~~~{intermission_block}
<center>https://en.wikipedia.org/wiki/Lorem_ipsum</center>
~~~


needs_srvyr_block: yes



~~~{convey_block}
## Poverty and Inequality Estimation with `convey` \\ {-}

The R `convey` library estimates measures of income concentration, poverty, inequality, and wellbeing.  [This textbook](https://guilhermejacob.github.io/context/) details the available features.  As a starting point for CHAPTER_TAG users, this code calculates the gini coefficient on complex sample survey data:

```{r eval = FALSE , results = "hide" }
library(convey)
chapter_tag_design <- convey_prep( chapter_tag_design )

svygini( ~ vd4020n , chapter_tag_design , na.rm = TRUE )
```
~~~


~~~{replication_example_block}
## Replication Example {-}

This example matches statistics and coefficients of variation from [Tabela 4092 - Pessoas de 14 anos ou mais de idade, por condição em relação à força de trabalho e condição de ocupação](https://sidra.ibge.gov.br/tabela/4092):

```{r eval = FALSE , results = "hide" }
nationwide_adult_population <- svytotal( ~ pia , chapter_tag_design , na.rm = TRUE )
	
stopifnot( round( coef( nationwide_adult_population ) / 1000000 , 3 ) == 174.228 )
stopifnot( round( cv( nationwide_adult_population ) / 1000000 , 3 ) == 0 )
	
nationwide_labor_force <- svytotal( ~ pea_c , chapter_tag_design , na.rm = TRUE )

stopifnot( round( coef( nationwide_labor_force ) / 1000000 , 3 ) == 107.257 )
stopifnot( round( cv( nationwide_labor_force ) * 100 , 1 ) == 0.2 )
	
nationwide_employed <- svytotal( ~ ocup_c , chapter_tag_design , na.rm = TRUE )

stopifnot( round( coef( nationwide_employed ) / 1000000 , 3 ) == 97.825 )
stopifnot( round( cv( nationwide_employed ) * 100 , 1 ) == 0.2 )
	
nationwide_unemployed <- svytotal( ~ desocup30 , chapter_tag_design , na.rm = TRUE )

stopifnot( round( coef( nationwide_unemployed ) / 1000000 , 3 ) == 9.432 )
stopifnot( round( cv( nationwide_unemployed ) * 100 , 1 ) == 1.2 )
	
nationwide_not_in_labor_force <-
	svytotal( ~ as.numeric( pia & !pea_c ) , chapter_tag_design , na.rm = TRUE )

stopifnot( round( coef( nationwide_not_in_labor_force ) / 1000000 , 3 ) == 66.972 )
stopifnot( round( cv( nationwide_not_in_labor_force ) * 100 , 1 ) == 0.3 )
	

```

~~~
