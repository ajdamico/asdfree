chapter_title: National Health Interview Survey

~~~{dataset_introduction}
The National Health Interview Survey (NHIS) is America's most detailed household survey of health status and medical experience.
~~~

table_structure: * A main table with one row for each person within each sampled household, mergeable other tables like the sample child table with a more detailed questionnaire for only one child (when available) within each sampled household.

generalizable_population: * A complex sample survey designed to generalize to the civilian non-institutionalized population of the United States.

publication_period: * Released annually since 1963, the most recent major re-design in 1997.

administrative_organization: * Administered by the [Centers for Disease Control and Prevention](http://www.cdc.gov/).




catalog_subset_description: # 2016 only
catalog_subset: chapter_tag_cat <- subset( chapter_tag_cat , year == 2016 )

~~~{analysis_examples_survey_design}
options( survey.lonely.psu = "adjust" )

library(survey)
library(mitools)

chapter_tag_personsx_df <- 
	readRDS( file.path( path.expand( "~" ) , "CHAPTER_TAG" , "2016/personsx.rds" ) )

chapter_tag_income_list <- 
	readRDS( file.path( path.expand( "~" ) , "CHAPTER_TAG" , "2016/incmimp.rds" ) )

merge_variables <- c( "hhx" , "fmx" , "fpx" )

chapter_tag_personsx_df[ merge_variables ] <- 
	sapply( chapter_tag_personsx_df[ merge_variables ] , as.numeric )

inc_vars_to_keep <- 
	c( 
		merge_variables , 
		setdiff( 
			names( chapter_tag_income_list[[ 1 ]] ) , 
			names( chapter_tag_personsx_df )
		)
	)

# personsx variables to keep
vars_to_keep <- 
	c( merge_variables , "ppsu" , "pstrat" , "wtfa" ,
		'phstat' , 'sex' , 'hospno' , 'age_p' , 'hinotmyr' , 'notcov' )

chapter_tag_personsx_df <- chapter_tag_personsx_df[ vars_to_keep ]
	
chapter_tag_personsx_list <-
	lapply( chapter_tag_income_list ,
		function( w ){
			w <- w[ inc_vars_to_keep ]
			w[ merge_variables ] <- sapply( w[ merge_variables ] , as.numeric )
			result <- merge( chapter_tag_personsx_df , w )
			stopifnot( nrow( result ) == nrow( chapter_tag_personsx_df ) )
			result
		} )

# personsx design		
chapter_tag_design <- 
	svydesign( 
		id = ~ppsu , 
		strata = ~pstrat ,
		nest = TRUE ,
		weights = ~wtfa ,
		data = imputationList( chapter_tag_personsx_list )
	)

rm( chapter_tag_personsx_list ) ; gc()

chapter_tag_samadult_df <- 
	readRDS( file.path( path.expand( "~" ) , "CHAPTER_TAG" , "2016/samadult.rds" ) )

chapter_tag_samadult_df[ merge_variables ] <- 
	sapply( chapter_tag_samadult_df[ merge_variables ] , as.numeric )


samadult_vars_to_keep <- 
	c( 
		merge_variables , 
		setdiff( 
			names( chapter_tag_samadult_df ) , 
			names( chapter_tag_personsx_df ) 
		) 
	)

chapter_tag_personsx_samadult_df <-
	merge( chapter_tag_personsx_df , chapter_tag_samadult_df[ samadult_vars_to_keep ] )

stopifnot( nrow( chapter_tag_personsx_samadult_df ) == nrow( chapter_tag_samadult_df ) )

rm( chapter_tag_personsx_df , chapter_tag_samadult_df ) ; gc()

chapter_tag_samadult_list <-
	lapply( chapter_tag_income_list ,
		function( w ){
			w <- w[ inc_vars_to_keep ]
			w[ merge_variables ] <- sapply( w[ merge_variables ] , as.numeric )
			result <- merge( chapter_tag_personsx_samadult_df , w )
			stopifnot( nrow( result ) == nrow( chapter_tag_personsx_samadult_df ) )
			result
		} )

rm( chapter_tag_income_list , chapter_tag_personsx_samadult_df ) ; gc()

# sample adult design (commented out)
# chapter_tag_samadult_design <- 
	# svydesign( 
		# id = ~ppsu , 
		# strata = ~pstrat ,
		# nest = TRUE ,
		# weights = ~wtfa_sa ,
		# data = imputationList( chapter_tag_samadult_list )
	# )
	
rm( chapter_tag_samadult_list ) ; gc()
~~~

~~~{variable_recoding_block}
chapter_tag_design <- 
	update( 
		chapter_tag_design , 
		
		one = 1 ,
		
		poverty_category =
			factor( 
				findInterval( povrati3 , 1:4 ) ,
				labels = 
					c( "below poverty" , "100-199%" , "200-299%" , "300-399%" , "400%+" )
			) ,
			
		fair_or_poor_reported_health = 
			ifelse( phstat %in% 1:5 , as.numeric( phstat >= 4 ) , NA ) ,
			
		sex = factor( sex , labels = c( "male" , "female" ) ) ,
		
		hospno = ifelse( hospno > 366 , NA , hospno )

	)
~~~

group_by_variable: poverty_category
group_by_variable_description: poverty categories

categorical_variable: sex
categorical_variable_description: sex (1=male, 2=female)

linear_variable: age_p
linear_variable_description: age

ratio_estimation_numerator: hinotmyr
ratio_estimation_denominator: hospno
ratio_narm: , na.rm = TRUE

subset_definition: notcov == 1
subset_definition_description: uninsured

binary_variable: fair_or_poor_reported_health
binary_variable_description: fair or poor self-reported health status
binary_narm: , na.rm = TRUE


~~~{replication_example_block}
---

## Replication Example {-}

```{r eval = FALSE , results = "hide" }


```

~~~





needs_actions_build_status_line: yes




