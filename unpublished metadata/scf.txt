~~~{replacement_block}
MIcombine
scf_MIcombine
 se = TRUE
 se = TRUE , method = 'constant' , interval.type = 'quantile'
~~~



chapter_title: Survey of Consumer Finances

~~~{dataset_introduction}
The Survey of Consumer Finances (SCF) tracks the wealth of American families.  Six thousand households answer a battery of questions about income, net worth, credit card debt, pensions, mortgages, even the lease on their cars.  Plenty of surveys collect annual income, only the Survey of Consumer Finances captures such detailed asset data.
~~~

table_structure: * One set of five tables of survey responses and a separate table with replicate weights, each table containing with one row per sampled household.  The set of five tables of survey responses contain successive replicates of each sampled households, used to properly account for statistical uncertainty.

generalizable_population: * A complex sample survey designed to generalize to the civilian non-institutional population of the United States.

publication_period: * Released triennially since 1989.

administrative_organization: * Administered by the [Board of Governors of the Federal Reserve System](https://www.federalreserve.gov/).





~~~{analysis_examples_survey_design}
library(survey)
library(mitools)

chapter_tag_imp <- readRDS( file.path( path.expand( "~" ) , "CHAPTER_TAG" , "scf 2016.rds" ) )

chapter_tag_rw <- readRDS( file.path( path.expand( "~" ) , "CHAPTER_TAG" , "scf 2016 rw.rds" ) )

chapter_tag_design <- 
	svrepdesign( 
		weights = ~wgt , 
		repweights = chapter_tag_rw[ , -1 ] , 
		data = imputationList( chapter_tag_imp ) , 
		scale = 1 ,
		rscales = rep( 1 / 998 , 999 ) ,
		mse = FALSE ,
		type = "other" ,
		combined.weights = TRUE
	)
~~~

~~~{variable_recoding_block}
chapter_tag_design <- 
	update( 
		chapter_tag_design , 
		
		hhsex = factor( hhsex , labels = c( "male" , "female" ) ) ,
		
		married = as.numeric( married == 1 ) ,
		
		edcl = 
			factor( 
				edcl , 
				labels = 
					c( 
						"less than high school" , 
						"high school or GED" , 
						"some college" , 
						"college degree" 
					) 
			)

	)
~~~

group_by_variable: hhsex
linear_variable: networth
categorical_variable: edcl
ratio_estimation_numerator: income
ratio_estimation_denominator: networth
subset_definition: lf == 1
subset_definition_description: labor force participants
binary_variable: married

~~~{convey_block}
## Poverty and Inequality Estimation with `convey` \\ {-}

The R `convey` library estimates measures of income concentration, poverty, inequality, and wellbeing.  [This textbook](https://guilhermejacob.github.io/context/) details the available features.  As a starting point for CHAPTER_TAG users, this code calculates the gini coefficient on complex sample survey data:

```{r eval = FALSE , results = "hide" }
library(convey)
chapter_tag_design$designs <- lapply( chapter_tag_design$designs , convey_prep )

MIcombine( with( chapter_tag_design , svygini( ~ networth ) ) )
```
~~~


~~~{replication_example_block}
## Replication Example {-}

The statistics computed off of the public use file come very close to the net worth estimates in [Table 2 of the bulletin](https://www.federalreserve.gov/publications/files/scf17.pdf#page=13) but do not match exactly.  A member of the SCF staff at the Federal Reserve re-ran the net worth calculations using the 2016 public use file to confirm that the calculations presented on this page follow the correct methodology.

```{r eval = FALSE , results = "hide" }

# compute mean net worth using the 2016 PUF
mean_net_worth <- MIcombine( with( scf_design , svymean( ~ networth ) ) )

# confirm the estimate and standard error match FRB calculations within one dollar
stopifnot( round( coef( mean_net_worth ) ) == 689509 )
stopifnot( round( SE( mean_net_worth ) ) == 12670 )


# compute median net worth using the 2016 PUF
median_net_worth <-
	MIcombine( with( scf_design ,
		svyquantile(
			~ networth ,
			0.5 , se = TRUE ,
			ci = TRUE
	) ) )

# confirm the estimate and standard error match FRB calculations within one dollar
stopifnot( round( coef( median_net_worth ) ) == 97306 )
stopifnot( round( SE( median_net_worth ) ) == 2699 )

```
~~~







needs_actions_build_status_line: yes
